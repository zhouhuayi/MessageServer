<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.choose.Message.mapper.PublicMessageMapper" >
  <resultMap id="BaseResultMap" type="com.choose.Message.bean.PublicMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sendPerson" property="sendperson" jdbcType="BIGINT" />
    <result column="sendTime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="roomId" property="roomid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="sendType" property="sendtype" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.choose.Message.bean.PublicMessage" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sendPerson, sendTime, roomId, state, sendType
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publicmessage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from publicmessage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.choose.Message.bean.PublicMessage" >
    insert into publicmessage (id, sendPerson, sendTime, 
      roomId, state, sendType, 
      content)
    values (#{id,jdbcType=BIGINT}, #{sendperson,jdbcType=BIGINT}, #{sendtime,jdbcType=TIMESTAMP}, 
      #{roomid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{sendtype,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.choose.Message.bean.PublicMessage" >
    insert into publicmessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sendperson != null" >
        sendPerson,
      </if>
      <if test="sendtime != null" >
        sendTime,
      </if>
      <if test="roomid != null" >
        roomId,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="sendtype != null" >
        sendType,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sendperson != null" >
        #{sendperson,jdbcType=BIGINT},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomid != null" >
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="sendtype != null" >
        #{sendtype,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.choose.Message.bean.PublicMessage" >
    update publicmessage
    <set >
      <if test="sendperson != null" >
        sendPerson = #{sendperson,jdbcType=BIGINT},
      </if>
      <if test="sendtime != null" >
        sendTime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomid != null" >
        roomId = #{roomid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="sendtype != null" >
        sendType = #{sendtype,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.choose.Message.bean.PublicMessage" >
    update publicmessage
    set sendPerson = #{sendperson,jdbcType=BIGINT},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      roomId = #{roomid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      sendType = #{sendtype,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.choose.Message.bean.PublicMessage" >
    update publicmessage
    set sendPerson = #{sendperson,jdbcType=BIGINT},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      roomId = #{roomid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      sendType = #{sendtype,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 批量添加私聊信息 -->
  <insert id="bathAdd" parameterType="com.choose.Message.pojo.MessagePojo" >
  	insert into publicMessage(sendPerson, sendTime, content, roomId, state, sendType) values
  	<foreach collection="addListMap" item="column" separator=",">  
	  	(#{column.sendPerson},#{column.sendTime},#{column.content},#{column.roomId},
	  	#{column.state},#{column.sendType})
  	</foreach>
  </insert>
</mapper>