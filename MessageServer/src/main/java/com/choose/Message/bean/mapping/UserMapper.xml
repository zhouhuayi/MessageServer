<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.choose.Message.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.choose.Message.bean.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="head" property="head" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="isLogin" property="islogin" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="INTEGER" />
    <result column="isMember" property="ismember" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, realName, name, head, level, state, role, isLogin, integral, phone, email, teacher, 
    isMember
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.choose.Message.bean.User" >
    insert into user (id, realName, name, 
      head, level, state, 
      role, isLogin, integral, 
      phone, email, teacher, 
      isMember)
    values (#{id,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{head,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{role,jdbcType=INTEGER}, #{islogin,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{teacher,jdbcType=INTEGER}, 
      #{ismember,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.choose.Message.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="head != null" >
        head,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="islogin != null" >
        isLogin,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="ismember != null" >
        isMember,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="head != null" >
        #{head,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="islogin != null" >
        #{islogin,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=INTEGER},
      </if>
      <if test="ismember != null" >
        #{ismember,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.choose.Message.bean.User" >
    update user
    <set >
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="head != null" >
        head = #{head,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="islogin != null" >
        isLogin = #{islogin,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=INTEGER},
      </if>
      <if test="ismember != null" >
        isMember = #{ismember,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.choose.Message.bean.User" >
    update user
    set realName = #{realname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      head = #{head,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER},
      isLogin = #{islogin,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=INTEGER},
      isMember = #{ismember,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>